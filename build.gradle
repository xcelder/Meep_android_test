// Top-level build file where you can add configuration options common to all sub-projects/modules.
def MAPS_API_KEY_PROPERTY = "MAPBOX_DOWNLOADS_TOKEN"
def MAPS_PUBLIC_API_KEY_PROPERTY = "MAPBOX_PUBLIC_TOKEN"

buildscript {
    ext.kotlin_version = "1.3.72"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

task checkMapsApiKey {
    def hasApiKey = project.hasProperty(MAPS_API_KEY_PROPERTY)
    def hasPublicApiKey = project.hasProperty(MAPS_PUBLIC_API_KEY_PROPERTY)

    println "has api key: " + hasApiKey
    println "has public api key: " + hasPublicApiKey

    if (!hasApiKey || !hasPublicApiKey) {
        throw new StopExecutionException("This project should contain a valid MAPBOX API KEY in your gradle.properties with the name MAPBOX_DOWNLOADS_TOKEN and an access token with name MAPBOX_PUBLIC_TOKEN")
    }

    println "your api key: " + project.getProperty(MAPS_API_KEY_PROPERTY)
    println "your public api key: " + project.getProperty(MAPS_PUBLIC_API_KEY_PROPERTY)
}

gradle.taskGraph.whenReady {
    checkMapsApiKey
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url 'https://api.mapbox.com/downloads/v2/releases/maven'
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                // Do not change the username below.
                // This should always be `mapbox` (not your username).
                username = 'mapbox'
                // Use the secret token you stored in gradle.properties as the password
                password = project.getProperty(MAPS_API_KEY_PROPERTY) ?: ""
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}